[{"filePath":"C:\\Users\\Vadim_Scherbakov\\JS\\automation-js-basic\\automation-js-basic\\app\\numbers_validator.js","messages":[],"suppressedMessages":[{"ruleId":"max-len","severity":2,"message":"This line has a length of 95. Maximum allowed is 80.","line":24,"column":1,"nodeType":"Program","messageId":"max","endLine":24,"endColumn":96,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"require-jsdoc","severity":2,"message":"Missing JSDoc comment.","line":35,"column":26,"nodeType":"FunctionExpression","messageId":"missingJSDocComment","endLine":41,"endColumn":4,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"valid-jsdoc","severity":2,"message":"Missing JSDoc parameter type for 'n'.","line":56,"column":6,"nodeType":"Block","messageId":"missingParamType","endLine":56,"endColumn":22,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"C:\\Users\\Vadim_Scherbakov\\JS\\automation-js-basic\\automation-js-basic\\test\\numbers-validator\\getEvenNumberFromArray.spec.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"C:\\Users\\Vadim_Scherbakov\\JS\\automation-js-basic\\automation-js-basic\\test\\numbers-validator\\isAllNumbers.spec.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"C:\\Users\\Vadim_Scherbakov\\JS\\automation-js-basic\\automation-js-basic\\test\\numbers-validator\\isInteger.spec.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import NumbersValidator from '../../app/numbers_validator.js';\nimport {expect} from 'chai';\nimport {describe, beforeEach, it} from 'mocha';\n\ndescribe('isInteger', () => {\n  let validator;\n\n  beforeEach(() => {\n    validator = new NumbersValidator();\n  });\n\n  afterEach(() => {\n    validator = null;\n  });\n\n  it('should return truy when provided with a number', () => {\n    const validatingResult = validator.isInteger(5);\n\n    expect(validatingResult).to.be.equal(true);\n  });\n\n  it('should throw an error when provide not a number', () => {\n    const notNumber = 'text';\n\n    expect(() => {\n      validator.isInteger(notNumber);\n    }).to.throw('[text] is not a number');\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"C:\\Users\\Vadim_Scherbakov\\JS\\automation-js-basic\\automation-js-basic\\test\\numbers-validator\\isNumberEven.spec.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]}]